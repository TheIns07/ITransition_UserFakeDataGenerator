@page "/"

@inject HttpClient Http
@using System.Net.Http.Json
@using UserDataGenerator.Client.DTO

<h3>User Generator</h3>

<div class="form-group">
    <label for="region">Region:</label>
    <select id="region" class="form-control" @bind="selectedRegion">
        <option value="usa">USA</option>
        <option value="poland">Poland</option>
        <option value="georgia">Georgia</option>
    </select>
</div>

<div class="form-group">
    <label for="errors">Errors per Record:</label>
    <input id="errors-slider" type="range" min="0" max="10" class="form-control-range" @bind="errorSliderValue" @oninput="UpdateErrorField" />
    <input id="errors-number" type="number" min="0" max="1000" class="form-control" @bind="errorFieldValue" @oninput="UpdateErrorSlider" />
</div>

<div class="form-group">
    <label for="seed">Seed:</label>
    <input id="seed" type="number" class="form-control" @bind="seedValue" />
    <button class="btn btn-secondary mb-3" @onclick="GenerateRandomSeed">Random</button>
</div>

<button class="btn btn-primary" @onclick="GenerateUsers">Load Users</button>
<button class="btn btn-danger" @onclick="ClearUsers">Clear Table</button>

<table class="table table-striped mt-4">
    <thead>
        <tr>
            <th>Index</th>
            <th>Identifier</th>
            <th>Name</th>
            <th>Address</th>
            <th>Phone</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Identifier</td>
                <td>@user.Name</td>
                <td>@user.Address</td>
                <td>@user.Phone</td>
            </tr>
        }
    </tbody>
</table>



@code {
    private string selectedRegion = "usa";
    private int errorSliderValue = 0;
    private int errorFieldValue = 0;
    private int seedValue = 42;
    private List<UserDTO> users = new();

    private void UpdateErrorField(ChangeEventArgs e)
    {
        errorFieldValue = (int)Convert.ToDouble(e.Value);
    }

    private void UpdateErrorSlider(ChangeEventArgs e)
    {
        errorSliderValue = (int)Math.Min(Convert.ToDouble(e.Value), 10);
    }

    private void GenerateRandomSeed()
    {
        seedValue = new Random().Next();
    }

    private void ClearUsers()
    {
        users.Clear();
    }

    private async Task GenerateUsers()
    {
        try
        {
            var url = $"https://localhost:7046/api/user/{selectedRegion}/{errorFieldValue}/{seedValue}";
            users = await Http.GetFromJsonAsync<List<UserDTO>>(url); 
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }
    }
